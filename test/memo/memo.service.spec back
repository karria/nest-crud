import { Test, TestingModule } from '@nestjs/testing';
import { TypeOrmModule } from '@nestjs/typeorm';
import { CreateMemoDto } from '@src/memo/dto/create-memo.dto';
import { Memo } from '@src/memo/entities/memo.entity';
import { MemoService } from '@src/memo/memo.service';
import { CreateProjectDto } from '@src/project/dto/create-project.dto';
import { Project } from '@src/project/entity/project.entity';
import { ProjectService } from '@src/project/project.service';
import { TypeORMTestModule } from '@test/typeorm.test.module';

describe('MemoService', () => {
  let service: MemoService;
  let projectService: ProjectService;
  
  beforeAll(async () => {
    const module: TestingModule = await Test.createTestingModule({
      imports: [
        ...TypeORMTestModule([ Memo, Project ]),
        // TypeORMTestModule([Memo, Project]),
        // TypeOrmModule.forFeature([Memo, Project]),
      ],
      providers: [MemoService, ProjectService],
    }).compile();
  
    service = module.get<MemoService>(MemoService);
    projectService = module.get<ProjectService>(ProjectService);
  });

  it('should be defined', () => {
    expect(service).toBeDefined();
  });

  describe('create', () => {
    it('메모를 생성하고 저장된 메모 객체를 반환한다.', async () => {
      // 임시 프로젝트 생성
      const inputProjectData: CreateProjectDto = {
        title: '메모용 프로젝트'
      };
      const project = await projectService.create(inputProjectData);

      const inputData: CreateMemoDto = {
        projectUuid: project.uuid,
        content: '테스트 메모'
      };
      const memo = await service.create(inputData);

      expect(memo).toBeDefined();
      expect(memo.id).not.toBeNull();
    })
  })
});
